--- CMakeLists_newer.txt	2018-04-03 21:46:45.589356500 +0100
+++ CMakeLists.txt	2018-04-03 21:56:17.630498000 +0100
@@ -19,6 +19,12 @@
 
 CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
 
+# Required to fix the paths for the find_package commands to follow
+INCLUDE(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
+CONAN_BASIC_SETUP()
+
+SET(CMAKE_SKIP_INSTALL_ALL_DEPENDENCY TRUE)
+
 FIND_PACKAGE(OpenSSL)
 
 FIND_PACKAGE(expat)
@@ -30,7 +36,12 @@
 OPTION(APR_BUILD_TESTAPR    "Build the test suite"                      OFF)
 OPTION(TEST_STATIC_LIBS     "Test programs use APR static libraries instead of shared libraries?" OFF)
 SET(APR_INCLUDE_DIR         "${CMAKE_INSTALL_PREFIX}/include"           CACHE STRING "Directory with APR include files")
-SET(APR_LIBRARIES           "${CMAKE_INSTALL_PREFIX}/lib/libapr-1.lib"  CACHE STRING "APR library to link with")
+
+IF(APU_BUILD_SHARED)
+  SET(APR_LIBRARIES           "${CMAKE_INSTALL_PREFIX}/lib/libapr-1.lib"  CACHE STRING "APR library to link with")
+ELSE()
+  SET(APR_LIBRARIES           "${CMAKE_INSTALL_PREFIX}/lib/apr-1.lib"  CACHE STRING "APR library to link with")
+ENDIF()
 
 IF(NOT EXISTS "${APR_INCLUDE_DIR}/apr.h")
   MESSAGE(FATAL_ERROR "APR include directory ${APR_INCLUDE_DIR} is not correct.")
@@ -65,8 +76,8 @@
   MESSAGE(FATAL_ERROR "Expat is required, and it wasn't found!")
 ENDIF()
 
-SET(XMLLIB_INCLUDE_DIR   ${EXPAT_INCLUDE_DIRS})
-SET(XMLLIB_LIBRARIES     ${EXPAT_LIBRARIES})
+SET(XMLLIB_INCLUDE_DIR   ${EXPAT_INCLUDE_DIR})
+SET(XMLLIB_LIBRARIES     ${EXPAT_LIBRARY})
 
 SET(LDAP_LIBRARIES)
 IF(APR_HAS_LDAP)
@@ -229,16 +240,18 @@
 # Note: The WINNT definition on some targets is used only by libaprutil.rc.
 
 # libaprutil-1 is shared, aprutil-1 is static
-ADD_LIBRARY(libaprutil-1 SHARED ${APR_SOURCES} ${APR_PUBLIC_HEADERS_GENERATED} libaprutil.rc)
-SET(install_targets ${install_targets} libaprutil-1)
-SET(install_bin_pdb ${install_bin_pdb} ${PROJECT_BINARY_DIR}/libaprutil-1.pdb)
-TARGET_LINK_LIBRARIES(libaprutil-1 ${APR_LIBRARIES} ${XMLLIB_LIBRARIES})
-SET_TARGET_PROPERTIES(libaprutil-1 PROPERTIES COMPILE_DEFINITIONS "APU_DECLARE_EXPORT;APR_DECLARE_EXPORT;XML_STATIC;WINNT")
-
-ADD_LIBRARY(aprutil-1 STATIC ${APR_SOURCES} ${APR_PUBLIC_HEADERS_GENERATED})
-SET(install_targets ${install_targets} aprutil-1)
-TARGET_LINK_LIBRARIES(aprutil-1 ${APR_LIBRARIES} ${XMLLIB_LIBRARIES})
-SET_TARGET_PROPERTIES(aprutil-1 PROPERTIES COMPILE_DEFINITIONS "APU_DECLARE_STATIC;APR_DECLARE_STATIC;APU_DSO_MODULE_BUILD;XML_STATIC")
+if(APU_BUILD_SHARED)
+  ADD_LIBRARY(libaprutil-1 SHARED ${APR_SOURCES} ${APR_PUBLIC_HEADERS_GENERATED} libaprutil.rc)
+  SET(install_targets ${install_targets} libaprutil-1)
+  SET(install_bin_pdb ${install_bin_pdb} ${PROJECT_BINARY_DIR}/libaprutil-1.pdb)
+  TARGET_LINK_LIBRARIES(libaprutil-1 ${APR_LIBRARIES} ${XMLLIB_LIBRARIES})
+  SET_TARGET_PROPERTIES(libaprutil-1 PROPERTIES COMPILE_DEFINITIONS "APU_DECLARE_EXPORT;APR_DECLARE_EXPORT;XML_STATIC;WINNT")
+ELSE()
+  ADD_LIBRARY(aprutil-1 STATIC ${APR_SOURCES} ${APR_PUBLIC_HEADERS_GENERATED})
+  SET(install_targets ${install_targets} aprutil-1)
+  TARGET_LINK_LIBRARIES(aprutil-1 ${APR_LIBRARIES} ${XMLLIB_LIBRARIES})
+  SET_TARGET_PROPERTIES(aprutil-1 PROPERTIES COMPILE_DEFINITIONS "APU_DECLARE_STATIC;APR_DECLARE_STATIC;APU_DSO_MODULE_BUILD;XML_STATIC")
+ENDIF()
 
 IF(APU_HAVE_CRYPTO)
   IF(NOT OPENSSL_FOUND)
